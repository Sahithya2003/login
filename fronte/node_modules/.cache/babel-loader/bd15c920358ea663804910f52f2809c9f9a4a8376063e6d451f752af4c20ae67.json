{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: () => _default\n});\nconst _postcssSelectorParser = /*#__PURE__*/_interopRequireDefault(require(\"postcss-selector-parser\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _default(prefix, selector) {\n  let prependNegative = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (0, _postcssSelectorParser.default)(selectors => {\n    selectors.walkClasses(classSelector => {\n      let baseClass = classSelector.value;\n      let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith(\"-\");\n      classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;\n    });\n  }).processSync(selector);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","_default","_postcssSelectorParser","_interopRequireDefault","require","obj","__esModule","default","prefix","selector","prependNegative","selectors","walkClasses","classSelector","baseClass","shouldPlaceNegativeBeforePrefix","startsWith","slice","processSync"],"sources":["/home/sahithya/bios/login/fronte/node_modules/tailwindcss/lib/util/prefixSelector.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _default(prefix, selector, prependNegative = false) {\n    return (0, _postcssSelectorParser.default)((selectors)=>{\n        selectors.walkClasses((classSelector)=>{\n            let baseClass = classSelector.value;\n            let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith(\"-\");\n            classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;\n        });\n    }).processSync(selector);\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,SAAS,EAAE;EACtCE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,MAAIC;AACb,CAAC,CAAC;AACF,MAAMC,sBAAsB,GAAG,aAAcC,sBAAsB,CAACC,OAAO,CAAC,yBAAyB,CAAC,CAAC;AACvG,SAASD,sBAAsB,CAACE,GAAG,EAAE;EACjC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IACjCE,OAAO,EAAEF;EACb,CAAC;AACL;AACA,SAASJ,QAAQ,CAACO,MAAM,EAAEC,QAAQ,EAA2B;EAAA,IAAzBC,eAAe,uEAAG,KAAK;EACvD,OAAO,CAAC,CAAC,EAAER,sBAAsB,CAACK,OAAO,EAAGI,SAAS,IAAG;IACpDA,SAAS,CAACC,WAAW,CAAEC,aAAa,IAAG;MACnC,IAAIC,SAAS,GAAGD,aAAa,CAACf,KAAK;MACnC,IAAIiB,+BAA+B,GAAGL,eAAe,IAAII,SAAS,CAACE,UAAU,CAAC,GAAG,CAAC;MAClFH,aAAa,CAACf,KAAK,GAAGiB,+BAA+B,GAAI,IAAGP,MAAO,GAAEM,SAAS,CAACG,KAAK,CAAC,CAAC,CAAE,EAAC,GAAI,GAAET,MAAO,GAAEM,SAAU,EAAC;IACvH,CAAC,CAAC;EACN,CAAC,CAAC,CAACI,WAAW,CAACT,QAAQ,CAAC;AAC5B"},"metadata":{},"sourceType":"script","externalDependencies":[]}